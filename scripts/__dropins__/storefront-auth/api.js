import{c as x,a as R,g as S}from"./chunks/createCustomerAddress.js";import{C as s,d as m,p as i,E as n}from"./chunks/getStoreConfig.js";import{g as G,a as K,b as N}from"./chunks/getStoreConfig.js";import{r as A}from"./chunks/requestPasswordResetEmail.js";import{r as M}from"./chunks/resetPassword.js";import{f as c,h as u}from"./chunks/setReCaptchaToken.js";import{g as U,r as H,s as P,a as I,b as V}from"./chunks/setReCaptchaToken.js";import{events as f}from"@dropins/tools/event-bus.js";import{c as y}from"./chunks/confirmEmail.js";import{r as B}from"./chunks/resendConfirmationEmail.js";import{c as $,i as j}from"./chunks/initialize.js";import"./chunks/transform-attributes-form.js";import"@dropins/tools/recaptcha.js";import"@dropins/tools/fetch-graphql.js";import"@dropins/tools/lib.js";const E=e=>{var r,o,a;let t="";return(r=e==null?void 0:e.errors)!=null&&r.length&&(t=((o=e==null?void 0:e.errors[0])==null?void 0:o.message)||"Unknown error"),{message:t,success:!!((a=e==null?void 0:e.data)!=null&&a.revokeCustomerToken)}},h=`
  mutation REVOKE_CUSTOMER_TOKEN {
    revokeCustomerToken {
      result
    }
  }
`,O=async()=>await c(h,{method:"POST"}).then(e=>{const t=E(e);if(t!=null&&t.success)[s.auth_dropin_user_token,s.auth_dropin_firstname].forEach(r=>{m(r)}),f.emit("authenticated",!1),i(n.SIGN_OUT,{logoutAttempt:!0});else{const r=`
          ERROR revokeCustomerToken: ${t.message}`;console.error(r)}return t}).catch(u);export{$ as config,y as confirmEmail,x as createCustomer,R as createCustomerAddress,c as fetchGraphQl,S as getAttributesForm,U as getConfig,G as getCustomerData,K as getCustomerToken,N as getStoreConfig,j as initialize,H as removeFetchGraphQlHeader,A as requestPasswordResetEmail,B as resendConfirmationEmail,M as resetPassword,O as revokeCustomerToken,P as setEndpoint,I as setFetchGraphQlHeader,V as setFetchGraphQlHeaders};
