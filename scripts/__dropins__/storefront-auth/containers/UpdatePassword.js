import{jsx as i,jsxs as G}from"@dropins/tools/preact-jsx-runtime.js";import{Slot as X,classes as Y}from"@dropins/tools/lib.js";import{v as Z,u as $,a as k}from"../chunks/usePasswordValidationMessage.js";import"@dropins/tools/event-bus.js";import"@dropins/tools/recaptcha.js";import{a as W}from"../chunks/getCustomerToken.js";import{r as S}from"../chunks/resetPassword.js";import{c as g,g as C,u as O,T as R,F as tt,B as et}from"../chunks/useInLineAlert.js";import{useState as w,useEffect as z,useCallback as E}from"@dropins/tools/preact-hooks.js";import{useText as I}from"@dropins/tools/i18n.js";import{InLineAlert as at,InputPassword as st}from"@dropins/tools/components.js";import"../chunks/getStoreConfig.js";import"../chunks/network-error.js";import"@dropins/tools/fetch-graphql.js";import"../chunks/initialize.js";import"../chunks/setReCaptchaToken.js";import"@dropins/tools/preact-compat.js";const H=(u,c)=>u.split("&").filter(e=>e.includes(c)).map(e=>e.split("=")[1])[0],rt=({isEmailConfirmationRequired:u,signInOnSuccess:c,passwordConfigs:s,routeRedirectOnSignIn:e,routeWrongUrlRedirect:r,onErrorCallback:d,onSuccessCallback:o,handleSetInLineAlertProps:m,routeRedirectOnPasswordUpdate:p})=>{const a=I({errorNotification:"Auth.Notification.errorNotification",updatePasswordMessage:"Auth.Notification.updatePasswordMessage",updatePasswordActionMessage:"Auth.Notification.updatePasswordActionMessage",customerTokenErrorMessage:"Auth.Api.customerTokenErrorMessage"}),[v,A]=w({userName:"",status:!1}),[y,L]=w(""),[F,x]=w(!1),[h,U]=w(""),[P,T]=w(""),[b,n]=w(!1),[N,_]=w(!1),[M,j]=w([]);z(()=>{F&&!M.length&&(y.length?_(!1):_(!0))},[F,y,M]),z(()=>{const{search:f}=window.location;!f.includes("token=")&&!f.includes("email=")&&g(r)&&(window.location.href=r());const t=decodeURIComponent(f),q=H(t,"token"),V=H(t,"email");U(V),T(q)},[r]);const J=E(async f=>{f.preventDefault(),n(!0),j([]);const t=C(f.target),q=(t==null?void 0:t.password)&&h&&P;t!=null&&t.password||(_(!0),n(!1));const V=(s==null?void 0:s.requiredCharacterClasses)??0,Q=(s==null?void 0:s.minLength)??0;if(!Z(t==null?void 0:t.password,V)||t.password.length<+Q){x(!0),n(!1);return}if(!q){m({type:"error",text:a.errorNotification}),n(!1);return}const{message:B,success:D}=await S(h,P,t.password);if(D){if(u||!u&&!c){o==null||o(),g(p)&&(window.location.href=p()),x(!0),n(!1),_(!1),L(""),j([{label:a.updatePasswordActionMessage,onClick:()=>{window.location.href=e==null?void 0:e()}}]),m({type:"success",text:a.updatePasswordMessage});return}const l=await W({email:h,password:t.password,handleSetInLineAlertProps:m,onErrorCallback:d,translations:a});l!=null&&l.userName&&(o==null||o(l==null?void 0:l.userName),g(e)?window.location.href=e():A({userName:l==null?void 0:l.userName,status:!0}))}else m({type:"error",text:B}),d==null||d({message:B,success:D});n(!1)},[h,P,a,c,s,u,e,m,p,d,o]),K=E(f=>{L(f)},[]);return{additionalActionsAlert:M,passwordError:N,isSuccessful:v,updatePasswordValue:y,isClickSubmit:F,isLoading:b,submitUpdatePassword:J,handleSetUpdatePasswordValue:K}},ot=({signInOnSuccess:u=!0,formSize:c="default",routeRedirectOnSignIn:s,routeWrongUrlRedirect:e,slots:r,onErrorCallback:d,onSuccessCallback:o,routeRedirectOnPasswordUpdate:m})=>{const p=I({title:"Auth.UpdatePasswordForm.title",buttonPrimary:"Auth.UpdatePasswordForm.buttonPrimary",placeholder:"Auth.InputPassword.placeholder",floatingLabel:"Auth.InputPassword.floatingLabel"}),{passwordConfigs:a,isEmailConfirmationRequired:v}=$(),{inLineAlertProps:A,handleSetInLineAlertProps:y}=O(),{additionalActionsAlert:L,passwordError:F,isSuccessful:x,updatePasswordValue:h,isClickSubmit:U,isLoading:P,submitUpdatePassword:T,handleSetUpdatePasswordValue:b}=rt({isEmailConfirmationRequired:v,signInOnSuccess:u,passwordConfigs:a,routeRedirectOnSignIn:s,routeWrongUrlRedirect:e,onErrorCallback:d,onSuccessCallback:o,handleSetInLineAlertProps:y,routeRedirectOnPasswordUpdate:m}),{isValidUniqueSymbols:n,defaultLengthMessage:N}=k({password:h,isClickSubmit:U,passwordConfigs:a});return x.status&&(r!=null&&r.SuccessNotification)?i(X,{"data-testid":"successNotificationTestId",name:"SuccessNotification",slot:r==null?void 0:r.SuccessNotification,context:{isSuccessful:x}}):G("div",{className:Y(["auth-updatePasswordForm",c]),children:[i(R,{text:p.title,bottomLine:!1,className:"auth-updatePasswordForm__title"}),A.text?i(at,{className:"auth-updatePasswordForm__notification",variant:"secondary",heading:A.text,icon:A.icon,additionalActions:L}):null,G(tt,{name:"updatePassword_form",className:"auth-updatePasswordForm__form",submitCallback:T,isLoading:P,fieldsConfig:[],children:[i("div",{style:"display: none;",children:i("input",{type:"text",id:"username",name:"username",autoComplete:"username"})}),i(st,{defaultValue:h,onValue:b,className:"auth-updatePasswordForm__form__item",autoComplete:"new-password",name:"password",error:F||n==="error"||(N==null?void 0:N.status)==="error",minLength:a==null?void 0:a.minLength,uniqueSymbolsStatus:n,validateLengthConfig:N,requiredCharacterClasses:a==null?void 0:a.requiredCharacterClasses,placeholder:p.placeholder,floatingLabel:p.floatingLabel}),i("div",{className:"auth-updatePasswordForm__button",children:i(et,{type:"submit",buttonText:p.buttonPrimary,variant:"primary",enableLoader:P})})]})]})},Lt=({slots:u,formSize:c,signInOnSuccess:s,routeRedirectOnPasswordUpdate:e,routeRedirectOnSignIn:r,routeWrongUrlRedirect:d,onErrorCallback:o,onSuccessCallback:m})=>i("div",{className:"auth-update-password",children:i(ot,{formSize:c,signInOnSuccess:s,routeRedirectOnSignIn:r,routeWrongUrlRedirect:d,onErrorCallback:o,onSuccessCallback:m,slots:u,routeRedirectOnPasswordUpdate:e})});export{Lt as UpdatePassword,Lt as default};
